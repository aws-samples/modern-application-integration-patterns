AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Serverless product feedback form handler - it accepts a form submission from a webpage and starts a state machine (workflow), which:
  1) does an sentiment analysis by using Amazon Comprehend
  2) saves the feedback data and the sentiment analysis in an Amazon DynamoDB table
  3) in case it's a negative feedback, it generates a case leveraging AWS Lambda and
  4) notifies an agent by e-mail using Amazon SES to follow up with it

##########################################################################
#  Parameters & Globals                                                  #
##########################################################################
Parameters:
  VerifiedEmail:
    Type: String
    Description: (Required) A validated SES email address for receiving new submissions.
    MaxLength: 70
    MinLength: 4
    ConstraintDescription: Required. Must be an Amazon SES verified email address.

Resources:
##########################################################################
#  SKELETON INFRASTRUCTURE                                               #
##########################################################################
  SkeletonDatabaseTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: executionId
          AttributeType: S
      KeySchema:
        - AttributeName: executionId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  SkeletonProductFeedbackStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Type: EXPRESS
      DefinitionUri: statemachine/skeleton-sfn-template.asl.json
      Policies:
          Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:GetLogDelivery
                - logs:UpdateLogDelivery
                - logs:DeleteLogDelivery
                - logs:ListLogDeliveries
                - logs:PutResourcePolicy
                - logs:DescribeResourcePolicies
                - logs:DescribeLogGroups
                - logs:PutLogEvents
              Resource: "*"

  SkeletonRestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: live
      EndpointConfiguration:
        Type: REGIONAL
      DefinitionBody:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            Location: 'api/skeleton-api.yaml'

##########################################################################
#  SOLUTION INFRASTRUCTURE                                               #
##########################################################################
  SolutionDatabaseTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: executionId
        AttributeType: S
      KeySchema:
      - AttributeName: executionId
        KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  CreateCase:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: functions/create-case/
      Timeout: 5
      AutoPublishAlias: live
      Handler: app.lambda_handler
      Runtime: python3.9
      MemorySize: 128
      Tracing: Active

  ProductFeedbackFormStateMachineCloudWatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /product-feedback-form-processing/step-functions
      RetentionInDays: 7

  RestApiforSyncWFCloudWatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /product-feedback-form-processing/api-gateway-access
      RetentionInDays: 7

  SolutionProductFeedbackStateMachine:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Properties:
      Type: EXPRESS
      DefinitionUri: statemachine/solution-sfn-template.asl.json
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt ProductFeedbackFormStateMachineCloudWatchLogsGroup.Arn
        IncludeExecutionData: True
        Level: ALL # ALL | ERROR | FATAL | OFF
      Tracing:
        Enabled: true
      DefinitionSubstitutions:
        CreateCase: !Ref CreateCase
        DDBTable: !Ref SolutionDatabaseTable
        SourceEmail: !Ref VerifiedEmail
      Policies: # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - ComprehendBasicAccessPolicy: {}
        - LambdaInvokePolicy:
            FunctionName: !Ref CreateCase
        - DynamoDBWritePolicy:
            TableName: !Ref SolutionDatabaseTable
        - SESCrudPolicy:
            IdentityName: !Ref VerifiedEmail
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: # see https://docs.aws.amazon.com/step-functions/latest/dg/cw-logs.html
                - logs:CreateLogStream
                - logs:GetLogDelivery
                - logs:UpdateLogDelivery
                - logs:DeleteLogDelivery
                - logs:ListLogDeliveries
                - logs:PutResourcePolicy
                - logs:DescribeResourcePolicies
                - logs:DescribeLogGroups
                - logs:PutLogEvents
              Resource: "*"

  SolutionRestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: live
      EndpointConfiguration:
        Type: REGIONAL
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: "/*" # allows for logging on any resource
          HttpMethod: "*" # allows for logging on any method
      AccessLogSetting:
        DestinationArn: !GetAtt RestApiforSyncWFCloudWatchLogsGroup.Arn
        Format: "$context.identity.sourceIp $context.identity.caller $context.identity.user [$context.requestTime] $context.httpMethod $context.resourcePath $context.protocol $context.status $context.responseLength $context.requestId"
      TracingEnabled: True
      DefinitionBody:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            Location: 'api/solution-api.yaml'

  SolutionRestApiRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
      - PolicyName: AllowSFNExec
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: states:StartSyncExecution
              Resource: !GetAtt SolutionProductFeedbackStateMachine.Arn
      - PolicyName: AllowCWLogging
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:DescribeLogGroups
                - logs:DescribeLogStreams
                - logs:PutLogEvents
                - logs:GetLogEvents
                - logs:FilterLogEvents
              Resource: "*"

##########################################################################
#   Outputs                                                              #
##########################################################################
Outputs:
  SkeletonDatabaseTable:
    Description: Skeleton DynamoDB Table ARN
    Value: !GetAtt SkeletonDatabaseTable.Arn
  SkeletonRestApiEndpoint:
    Description: "Skeleton API Gateway endpoint"
    Value: !Sub "https://${SkeletonRestApi}.execute-api.${AWS::Region}.amazonaws.com/live/"
  SkeletonStepFunctionsArn:
    Description: "Skeleton Step Functions ARN"
    Value: !GetAtt SkeletonProductFeedbackStateMachine.Arn


  SolutionDatabaseTable:
    Description: "Solution DynamoDB Table ARN"
    Value: !GetAtt SolutionDatabaseTable.Arn
  SolutionCreateCase:
    Description: "Solution Lambda Function ARN"
    Value: !GetAtt CreateCase.Arn
  SolutionRestApiEndpoint:
    Description: "Solution API Gateway endpoint"
    Value: !Sub "https://${SolutionRestApi}.execute-api.${AWS::Region}.amazonaws.com/live/"
  SolutionRestApiRole:
    Description: "Solution IAM role ARN for API Gateway"
    Value: !GetAtt SolutionRestApiRole.Arn
  SolutionStepFunctionsArn:
    Description: "Solution AWS Step Functions ARN"
    Value: !GetAtt SolutionProductFeedbackStateMachine.Arn